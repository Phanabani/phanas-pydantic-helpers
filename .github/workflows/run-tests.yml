name: Run Python tests

on: [workflow_call]

jobs:
  run_tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]

    steps:
    - uses: actions/checkout@v3

    - name: Cache Poetry
      id: cache-poetry
      uses: actions/cache@v3
      env:
        cache-name: cache-poetry
      with:
        path: |
          ~/.local/share/pypoetry
        key: >
          ${{ runner.os }}-${{ env.cache-name }}
          -${{ hashFiles('~/.local/share/pypoetry/VERSION') }}

    # Waiting for this issue to be fixed:
    # https://github.com/actions/setup-python/issues/369
    - if: ${{ steps.cache-poetry.outputs.cache-hit != 'true' }}
      name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "PATH=${HOME}/.poetry/bin:${PATH}" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"
        cache-dependency-path: pyproject.toml

    - name: Install dependencies
      run: |
        poetry install --no-root

    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run ruff . --select=E9,F63,F7,F82 --show-source
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run ruff . --exit-zero --select=C901 --line-length=127 --statistics

    - name: Test with pytest
      run: |
        poetry run pytest
